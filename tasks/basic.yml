---
- name: Install basic packages
  ansible.builtin.apt:
    name:
      - vim
      - net-tools
      - tmux
      - screen
      - make
      - cmake
      - gcc
      - build-essential
      - git
      - tig
      - texlive-full
      - wget
      - curl
      - jq
    state: present

- name: Copy vim config
  become: false
  ansible.builtin.copy:
    src: config/vimrc
    dest: /home/{{ ansible_user }}/.vimrc
    mode: "0644"

- name: Copy tmux config
  become: false
  ansible.builtin.copy:
    src: config/tmux.conf
    dest: /home/{{ ansible_user }}/.tmux.conf
    mode: "0644"

- name: Copy git config
  become: false
  ansible.builtin.copy:
    src: config/gitconfig
    dest: /home/{{ ansible_user }}/.gitconfig
    mode: "0664"

- name: Copy tig config
  become: false
  ansible.builtin.copy:
    src: config/tigrc
    dest: /home/{{ ansible_user }}/.tigrc
    mode: "0664"

- name: Check latest GitHub CLI release
  ansible.builtin.uri:
    url: https://api.github.com/repos/cli/cli/releases/latest
  register: github_cli_latest
  check_mode: false

- name: Install GitHub CLI
  ansible.builtin.apt:
    deb: "{{ github_cli_latest.json | community.general.json_query(url_query) | join('') }}"
  vars:
    url_query: assets[?contains(name,'linux_amd64.deb')].browser_download_url

- name: Configure Git status
  become: false
  ansible.builtin.blockinfile:
    path: /home/{{ ansible_user }}/.bashrc
    insertbefore: '\$color_prompt'
    append_newline: true
    prepend_newline: true
    block: |
      GIT_PS1_SHOWDIRTYSTATE='y'
      GIT_PS1_SHOWSTASHSTATE='y'
      GIT_PS1_SHOWUNTRACKEDFILES='y'
      GIT_PS1_SHOWUPSTREAM='auto verbose'
      GIT_PS1_SHOWCONFLICTSTATE='yes'
      GIT_PS1_DESCRIBE_STYLE='contains'
      GIT_PS1_SHOWCOLORHINTS='y'

- name: Insert Git status to bash prompt
  become: false
  ansible.builtin.replace:
    path: /home/{{ ansible_user }}/.bashrc
    regexp: '(?<!\$\(__git_ps1\))\\\$ '''
    replace: '$(__git_ps1)\$ '''

- name: Start ssh-agent automatically
  become: false
  ansible.builtin.lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    regexp: 'ssh-agent'
    line: 'eval "$(ssh-agent -s)" &>/dev/null'
